name: Spring Boot & Gradle & Docker & EC2 CD

on:
  push:
    branches:
      - main

permissions:
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      # 기본 체크아웃
      - name: Checkout
        uses: actions/checkout@v3

      # JDK version 설정
      - name: Set up JDK 11
        uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'

      # 환경변수 .env 파일 생성 및 write (docker-compose 대처법 숙지 후 다시 사용하기)
#      - name: Set .env for configuration
#        run: |
#          touch ./.env
#          echo "DB_URL=${{ secrets.DB_URL }}" >> ./.env
#          echo "DB_USERNAME=${{ secrets.DB_USERNAME }}" >> ./.env
#          echo "DB_PASSWORD=${{ secrets.DB_PASSWORD }}" >> ./.env
#          echo "S3_ACCESS_KEY=${{ secrets.S3_ACCESS_KEY }}" >> ./.env
#          echo "S3_SECRET_KEY=${{ secrets.S3_SECRET_KEY }}" >> ./.env
#          echo "REGION=${{ secrets.REGION }}" >> ./.env
#          echo "BUCKET_NAME=${{ secrets.BUCKET_NAME }}" >> ./.env
#          echo "JWT_ACCESS_SECRET=${{ secrets.JWT_ACCESS_SECRET }}" >> ./.env
#          echo "JWT_REFRESH_SECRET=${{ secrets.JWT_REFRESH_SECRET }}" >> ./.env
#          echo "PORT=${{ secrets.APP_PORT }}" >> ./.env
#        shell: bash

      # Gradle build
      - name: Build with Gradle
        run: ./gradlew bootJar

      # Spring 어플리케이션 Docker Image 빌드
      - name: Build Docker Image For Spring
        run: |
          docker login -u ${{ secrets.DOCKER_USERNAME }} -p ${{ secrets.DOCKER_PASSWORD }}
          docker build -t ${{ secrets.DOCKER_USERNAME }}/eatitdog:latest .
          docker push ${{ secrets.DOCKER_USERNAME }}/eatitdog:latest

      # 서버에서 Docker 이미지 실행
      - name: EC2 Docker Run
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          password: ${{ secrets.EC2_PASSWORD }}
          port: 22
          script: |
            docker rm eatitdog
            docker rmi ${{ secrets.DOCKER_USERNAME }}/eatitdog:latest
            docker pull ${{ secrets.DOCKER_USERNAME }}/eatitdog:latest
            docker run -d -p 8080:${{ secrets.APP_PORT }} --name eatitdog -e DB_URL=${{ secrets.DB_URL }} -e DB_USERNAME=${{ secrets.DB_USERNAME }} -e DB_PASSWORD=${{ secrets.DB_PASSWORD }} -e S3_ACCESS_KEY=${{ secrets.S3_ACCESS_KEY }} -e S3_SECRET_KEY=${{ secrets.S3_SECRET_KEY }} -e REGION=${{ secrets.REGION }} -e BUCKET_NAME=${{ secrets.BUCKET_NAME }} -e JWT_ACCESS_SECRET=${{ secrets.JWT_ACCESS_SECRET }} -e JWT_REFRESH_SECRET=${{ secrets.JWT_REFRESH_SECRET }} -e PORT=${{ secrets.APP_PORT }} ${{ secrets.DOCKER_USERNAME}}/eatitdog:latest